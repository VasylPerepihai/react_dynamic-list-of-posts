{"version":3,"sources":["components/PostsList/PostsList.tsx","api/post.ts","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","userId","onPostSelect","postId","useState","posts","setPosts","useEffect","fetch","then","response","json","getUserPosts","result","className","map","post","title","type","onClick","id","deletePostComments","commentId","method","addPostComments","name","email","body","headers","JSON","stringify","NewCommentForm","onCommentAdd","setName","setEmail","bodyMessage","SetBodyMessage","onSubmit","event","preventDefault","value","onChange","target","placeholder","PostDetails","createdAt","updatedAt","postDetail","setPostDetail","postComments","setPostComments","isVisible","toggleVisibility","handlePostComments","getPostComments","getPostDetails","deleteComment","a","addComment","length","comment","App","selectedUserId","changeUser","selectedPostId","changePostId","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25d9eee7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getUserPosts } from '../../api/post';\nimport './PostsList.scss';\nimport { Post } from '../../react-app-env';\n\ntype Props = {\n  userId: number;\n  onPostSelect: (postId:number) => void;\n  postId: number;\n};\n\nexport const PostsList: React.FC<Props> = ({ userId, onPostSelect, postId }) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(result => setPosts(result));\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => (postId === post.id ? onPostSelect(0) : onPostSelect(post.id))}\n            >\n              {postId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export const getUserPosts = (userId: number) => {\n  if (userId === 0) {\n    return fetch('https://mate.academy/students-api/posts')\n      .then(response => response.json());\n  }\n\n  return fetch(`https://mate.academy/students-api/posts?userId=${userId}`)\n    .then(response => response.json());\n};\n\nexport const getPostDetails = (postId: number) => {\n  return fetch(`https://mate.academy/students-api/posts/${postId}`)\n    .then(response => response.json());\n};\n","export const getPostComments = (postId: number) => {\n  return fetch(`https://mate.academy/students-api/comments?postId=${postId}`)\n    .then(response => response.json());\n};\n\nexport const deletePostComments = (commentId: number) => {\n  return fetch(`https://mate.academy/students-api/comments/${commentId}`, { method: 'DELETE' });\n};\n\nexport const addPostComments = (postId: number, name: string, email: string, body: string) => {\n  return fetch('https://mate.academy/students-api/comments', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  onCommentAdd: (name: string, email: string, body: string) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ onCommentAdd }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [bodyMessage, SetBodyMessage] = useState('');\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    onCommentAdd(name, email, bodyMessage);\n    setName('');\n    setEmail('');\n    SetBodyMessage('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={bodyMessage}\n          onChange={event => SetBodyMessage(event.target.value)}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { addPostComments, deletePostComments, getPostComments } from '../../api/comments';\nimport { getPostDetails } from '../../api/post';\nimport { Post, Comment } from '../../react-app-env';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  postId: number;\n};\n\nexport const PostDetails: React.FC<Props> = ({ postId }) => {\n  const [postDetail, setPostDetail] = useState<Post>({\n    id: 0,\n    createdAt: '',\n    updatedAt: '',\n    userId: 0,\n    title: '',\n    body: '',\n  });\n\n  const [postComments, setPostComments] = useState<Comment[]>([]);\n  const [isVisible, toggleVisibility] = useState(true);\n\n  const handlePostComments = () => {\n    getPostComments(postId)\n      .then(result => setPostComments(result));\n  };\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then(result => setPostDetail(result));\n\n    handlePostComments();\n  }, [postId]);\n\n  const deleteComment = async (commentId: number) => {\n    await deletePostComments(commentId);\n    handlePostComments();\n  };\n\n  const addComment = async (name: string, email: string, body: string) => {\n    await addPostComments(postId, name, email, body);\n    handlePostComments();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <section className=\"PostDetails__post\">\n        <p>{postDetail.body}</p>\n      </section>\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => toggleVisibility(!isVisible)}\n        >\n          {isVisible ? 'Hide ' : 'Show '}\n          {postComments.length}\n          {' comments'}\n        </button>\n        {isVisible\n        && (\n          <ul className=\"PostDetails__list\">\n            {postComments.map(comment => (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm onCommentAdd={addComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App: React.FC = () => {\n  const [selectedUserId, changeUser] = useState('0');\n  const [selectedPostId, changePostId] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"App__user-selector\">\n          Select a user: &nbsp;\n          <select\n            className=\"App__user-selector\"\n            id=\"App__user-selector\"\n            value={selectedUserId}\n            onChange={event => changeUser(event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={+selectedUserId}\n            onPostSelect={changePostId}\n            postId={selectedPostId}\n          />\n        </div>\n        <div className=\"App__content\">\n          {selectedPostId > 0\n            && (<PostDetails postId={selectedPostId} />)}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}