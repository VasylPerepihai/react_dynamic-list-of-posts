{"version":3,"sources":["components/PostsList/PostsList.tsx","api/post.ts","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/users.ts","App.tsx","index.tsx"],"names":["PostsList","userId","onPostSelect","postId","useState","posts","setPosts","useEffect","fetch","then","response","json","getUserPosts","result","className","map","post","title","type","onClick","id","deletePostComment","commentId","method","addPostComment","name","email","body","headers","JSON","stringify","NewCommentForm","onCommentAdd","comment","setComment","onSubmit","event","preventDefault","value","onChange","prevComment","target","placeholder","PostDetails","createdAt","updatedAt","postDetail","setPostDetail","postComments","setPostComments","isVisible","toggleVisibility","handlePostComments","getPostComments","getPostDetails","deleteComment","a","addComment","length","users","App","selectedUserId","changeUser","selectedPostId","changePostId","htmlFor","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50fadd84.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getUserPosts } from '../../api/post';\nimport './PostsList.scss';\nimport { Post } from '../../react-app-env';\n\ntype Props = {\n  userId: number;\n  onPostSelect: (postId:number) => void;\n  postId: number;\n};\n\nexport const PostsList: React.FC<Props> = ({ userId, onPostSelect, postId }) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(result => setPosts(result));\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => (postId === post.id ? onPostSelect(0) : onPostSelect(post.id))}\n            >\n              {postId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export const getUserPosts = (userId: number) => {\n  if (userId === 0) {\n    return fetch('https://mate.academy/students-api/posts')\n      .then(response => response.json());\n  }\n\n  return fetch(`https://mate.academy/students-api/posts?userId=${userId}`)\n    .then(response => response.json());\n};\n\nexport const getPostDetails = (postId: number) => {\n  return fetch(`https://mate.academy/students-api/posts/${postId}`)\n    .then(response => response.json());\n};\n","export const getPostComments = (postId: number) => {\n  return fetch(`https://mate.academy/students-api/comments?postId=${postId}`)\n    .then(response => response.json());\n};\n\nexport const deletePostComment = (commentId: number) => {\n  return fetch(`https://mate.academy/students-api/comments/${commentId}`, { method: 'DELETE' });\n};\n\nexport const addPostComment = (postId: number, name: string, email: string, body: string) => {\n  return fetch('https://mate.academy/students-api/comments', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  onCommentAdd: (name: string, email: string, body: string) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ onCommentAdd }) => {\n  const [comment, setComment] = useState({\n    name: '',\n    email: '',\n    body: '',\n  });\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    onCommentAdd(comment.name, comment.email, comment.body);\n    setComment({\n      name: '',\n      email: '',\n      body: '',\n    });\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={comment.name}\n          onChange={event => setComment(prevComment => ({\n            name: event.target.value,\n            email: prevComment.email,\n            body: prevComment.body,\n          }))}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={comment.email}\n          onChange={event => setComment(prevComment => ({\n            name: prevComment.name,\n            email: event.target.value,\n            body: prevComment.body,\n          }))}\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          value={comment.body}\n          onChange={event => setComment(prevComment => ({\n            name: prevComment.name,\n            email: prevComment.email,\n            body: event.target.value,\n          }))}\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { addPostComment, deletePostComment, getPostComments } from '../../api/comments';\nimport { getPostDetails } from '../../api/post';\nimport { Post, Comment } from '../../react-app-env';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  postId: number;\n};\n\nexport const PostDetails: React.FC<Props> = ({ postId }) => {\n  const [postDetail, setPostDetail] = useState<Post>({\n    id: 0,\n    createdAt: '',\n    updatedAt: '',\n    userId: 0,\n    title: '',\n    body: '',\n  });\n\n  const [postComments, setPostComments] = useState<Comment[]>([]);\n  const [isVisible, toggleVisibility] = useState(true);\n\n  const handlePostComments = () => {\n    getPostComments(postId)\n      .then(result => setPostComments(result));\n  };\n\n  useEffect(() => {\n    getPostDetails(postId)\n      .then(result => setPostDetail(result));\n\n    handlePostComments();\n  }, [postId]);\n\n  const deleteComment = async (commentId: number) => {\n    await deletePostComment(commentId);\n    handlePostComments();\n  };\n\n  const addComment = async (name: string, email: string, body: string) => {\n    await addPostComment(postId, name, email, body);\n    handlePostComments();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <section className=\"PostDetails__post\">\n        <p>{postDetail.body}</p>\n      </section>\n      <section className=\"PostDetails__comments\">\n        {postComments.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => toggleVisibility(!isVisible)}\n          >\n            {isVisible ? 'Hide ' : 'Show '}\n            {postComments.length}\n            {' comments'}\n          </button>\n        )}\n        {isVisible\n        && (\n          <ul className=\"PostDetails__list\">\n            {postComments.map(comment => (\n              <li className=\"PostDetails__list-item\" key={comment.id}>\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm onCommentAdd={addComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","export const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n  },\n  {\n    id: 10,\n    name: 'Leanne Graham',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { users } from './api/users';\n\nconst App: React.FC = () => {\n  const [selectedUserId, changeUser] = useState('0');\n  const [selectedPostId, changePostId] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"App__user-selector\">\n          Select a user: &nbsp;\n          <select\n            className=\"App__user-selector\"\n            id=\"App__user-selector\"\n            value={selectedUserId}\n            onChange={event => changeUser(event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n        </label>\n      </header>\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={+selectedUserId}\n            onPostSelect={changePostId}\n            postId={selectedPostId}\n          />\n        </div>\n        <div className=\"App__content\">\n          {selectedPostId > 0\n            && (<PostDetails postId={selectedPostId} />)}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}